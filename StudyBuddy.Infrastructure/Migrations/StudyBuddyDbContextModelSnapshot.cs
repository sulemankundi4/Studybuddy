// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyBuddy.Infrastructure.Contexts;

#nullable disable

namespace StudyBuddy.Infrastructure.Migrations
{
    [DbContext(typeof(StudyBuddyDbContext))]
    partial class StudyBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudyBuddy.Core.Entities.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityProgressMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CourseGoalMinutes")
                        .HasColumnType("int");

                    b.Property<string>("CourseNameColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseProgressMinutes")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.GoalEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TermGoalMinutes")
                        .HasColumnType("int");

                    b.Property<Guid>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TermProgressMinutes")
                        .HasColumnType("int");

                    b.Property<int>("WeekDayStudyTime")
                        .HasColumnType("int");

                    b.Property<int>("WeekEndStudyTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TermId")
                        .IsUnique();

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.OTPCodeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTPCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTPUseCase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OTPCodes");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.SessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("SessionDate")
                        .HasColumnType("date");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<string>("SessionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TermId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.TermEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TermDuration")
                        .HasColumnType("int");

                    b.Property<string>("TermNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.ActivityEntity", b =>
                {
                    b.HasOne("StudyBuddy.Core.Entities.TermEntity", "Term")
                        .WithMany("Activities")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Term");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.CourseEntity", b =>
                {
                    b.HasOne("StudyBuddy.Core.Entities.TermEntity", "Term")
                        .WithMany("Courses")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Term");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.GoalEntity", b =>
                {
                    b.HasOne("StudyBuddy.Core.Entities.TermEntity", "Term")
                        .WithOne("Goal")
                        .HasForeignKey("StudyBuddy.Core.Entities.GoalEntity", "TermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Term");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.SessionEntity", b =>
                {
                    b.HasOne("StudyBuddy.Core.Entities.ActivityEntity", "Activity")
                        .WithMany("Sessions")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("StudyBuddy.Core.Entities.CourseEntity", "Course")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StudyBuddy.Core.Entities.TermEntity", "Term")
                        .WithMany("Sessions")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Course");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.ActivityEntity", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.CourseEntity", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("StudyBuddy.Core.Entities.TermEntity", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Courses");

                    b.Navigation("Goal")
                        .IsRequired();

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
